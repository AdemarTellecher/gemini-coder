{
  "name": "gemini-fim",
  "displayName": "Gemini FIM",
  "description": "Take advantage of 1 million token context window and use Gemini as your Fill-in-the-middle coding assistant. Extension attaches all open files as context and gets you the best code completions possible.",
  "version": "1.0.9",
  "publisher": "robertpiosik",
  "repository": {
    "type": "git",
    "url": "https://github.com/robertpiosik/gemini-fim"
  },
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "gemini",
    "ai",
    "Fill-in-the-middle",
    "FIM",
    "Coding assistant",
    "OpenAI API"
  ],
  "activationEvents": [],
  "main": "out/extension.js",
  "icon": "media/thumbnail.png",
  "contributes": {
    "commands": [
      {
        "command": "extension.sendFimRequest",
        "title": "Gemini FIM: Run"
      },
      {
        "command": "extension.insertFimTokens",
        "title": "Gemini FIM: Insert <FIM></FIM> tokens"
      },
      {
        "command": "extension.changeDefaultProvider",
        "title": "Gemini FIM: Change Default Provider"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "extension.insertFimTokens",
          "when": "editorTextFocus && !editorReadonly",
          "group": "navigation@10"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Gemini FIM Settings",
      "properties": {
        "geminiFim.defaultProvider": {
          "type": "string",
          "description": "The default model to use.",
          "default": "Gemini Flash",
          "enum": [
            "Gemini Flash",
            "Gemini Pro"
          ]
        },
        "geminiFim.apiKey": {
          "type": "string",
          "scope": "resource",
          "description": "API key to use with Gemini models. Get yours here: https://aistudio.google.com/app/apikey",
          "default": ""
        },
        "geminiFim.temperature": {
          "type": "number",
          "scope": "resource",
          "description": "Temperature to use with Gemini models.",
          "default": 0
        },
        "geminiFim.providers": {
          "type": "array",
          "default": [],
          "description": "Configure additional models via OpenAI API compatible providers.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "A friendly name for the provider."
              },
              "endpointUrl": {
                "type": "string",
                "description": "The endpoint URL for the API."
              },
              "bearerToken": {
                "type": "string",
                "description": "The bearer token for API authentication. Supports multiple tokens separated by commas."
              },
              "model": {
                "type": "string",
                "description": "The model to be used for the API."
              },
              "temperature": {
                "type": "number",
                "description": "The temperature to be used for the API."
              },
              "systemInstructions": {
                "type": "string",
                "description": "The system instructions to be used for the API."
              },
              "instruction": {
                "type": "string",
                "description": "The instruction to be used for the API."
              }
            }
          }
        },
        "geminiFim.verbose": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logging."
        },
        "geminiFim.attachOpenFiles": {
          "type": "boolean",
          "default": true,
          "description": "Attach all open files to the request."
        },
        "geminiFim.globalInstruction": {
          "type": "string",
          "description": "A global instruction used if a provider does not specify its own.",
          "default": "The following text is a Git repository with code. Somewhere in the repository, you will encounter a <FIM></FIM> symbol. Think step by step about what code fits this place best. The text inside the symbol can help you understand the intended filling code. Please send nothing more than the filling code."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.9",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^8.10.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.13.0",
    "typescript": "^5.6.3"
  },
  "dependencies": {
    "axios": "^1.7.7",
    "openai-gpt-token-counter": "^1.1.1"
  }
}
