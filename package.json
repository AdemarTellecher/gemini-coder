{
  "name": "gemini-fim",
  "displayName": "Gemini FIM",
  "description": "Take advantage of 1 million token context window and use Gemini as your Fill-in-the-middle coding assistant. Extension attaches all selected folders and files as context so you can get the best code completions possible.",
  "version": "1.0.13",
  "publisher": "robertpiosik",
  "repository": {
    "type": "git",
    "url": "https://github.com/robertpiosik/gemini-fim"
  },
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "gemini",
    "ai",
    "Fill-in-the-middle",
    "FIM",
    "Coding assistant",
    "OpenAI API"
  ],
  "activationEvents": [
    "onView.geminiFimView"
  ],
  "main": "out/extension.js",
  "icon": "media/thumbnail.png",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "geminiFim",
          "title": "Gemini FIM",
          "icon": "resources/activity-bar-icon.svg"
        }
      ]
    },
    "views": {
      "geminiFim": [
        {
          "id": "geminiFimView",
          "name": "Context"
        }
      ]
    },
    "commands": [
      {
        "command": "geminiFim.copyContext",
        "title": "Copy context",
        "icon": {
          "light": "resources/light/copy.svg",
          "dark": "resources/dark/copy.svg"
        }
      },
      {
        "command": "geminiFim.clearChecks",
        "title": "Clear all checks",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "geminiFim.copyOpenFiles",
        "title": "Gemini FIM: Copy Open Files"
      },
      {
        "command": "geminiFim.sendFimRequest",
        "title": "Gemini FIM: Run"
      },
      {
        "command": "geminiFim.insertFimTokens",
        "title": "Gemini FIM: Insert <FIM></FIM> tokens"
      },
      {
        "command": "geminiFim.changeDefaultProvider",
        "title": "Gemini FIM: Change Default Provider"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "geminiFim.copyContext",
          "when": "view == geminiFimView",
          "group": "navigation@1"
        },
        {
          "command": "geminiFim.clearChecks",
          "when": "view == geminiFimView",
          "group": "navigation@3"
        }
      ],
      "editor/context": [
        {
          "command": "geminiFim.insertFimTokens",
          "when": "editorTextFocus && !editorReadonly",
          "group": "navigation@10"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Gemini FIM Settings",
      "properties": {
        "geminiFim.defaultProvider": {
          "type": "string",
          "description": "The default model to use.",
          "default": "Gemini Flash"
        },
        "geminiFim.apiKey": {
          "type": "string",
          "scope": "resource",
          "description": "API key to use with Gemini models. Get yours here: https://aistudio.google.com/app/apikey",
          "default": ""
        },
        "geminiFim.temperature": {
          "type": "number",
          "scope": "resource",
          "description": "Temperature to use with Gemini models.",
          "default": 0
        },
        "geminiFim.providers": {
          "type": "array",
          "default": [],
          "description": "Configure additional models via OpenAI API compatible providers.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "A friendly name for the provider."
              },
              "endpointUrl": {
                "type": "string",
                "description": "Endpoint URL."
              },
              "bearerToken": {
                "type": "string",
                "description": "API key."
              },
              "model": {
                "type": "string",
                "description": "Model name."
              },
              "temperature": {
                "type": "number",
                "description": "Temperature."
              },
              "systemInstructions": {
                "type": "string",
                "description": "The system instructions."
              },
              "instruction": {
                "type": "string",
                "description": "Custom FIM instruction."
              }
            }
          }
        },
        "geminiFim.verbose": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logging."
        },
        "geminiFim.attachOpenFiles": {
          "type": "boolean",
          "default": true,
          "description": "Attach all open files to the request."
        },
        "geminiFim.globalInstruction": {
          "type": "string",
          "description": "A global instruction used if a provider does not specify its own.",
          "default": "The following text is a Git repository with code. Somewhere in the repository, you will encounter a <FIM></FIM> symbol. Think step by step about what code fits this place best. The text inside the symbol can help you understand the intended filling code. Please send nothing more than the filling code."
        },
        "geminiFim.ignoredExtensions": {
          "type": "string",
          "description": "Comma-separated list of file extensions to ignore during recursive scan for context files. Example: 'png,jpg,jpeg,gif,svg'",
          "default": "png,jpg,jpeg,gif,svg"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.9",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^8.10.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.13.0",
    "typescript": "^5.6.3"
  },
  "dependencies": {
    "axios": "^1.7.7",
    "ignore": "^6.0.2",
    "openai-gpt-token-counter": "^1.1.1"
  }
}
