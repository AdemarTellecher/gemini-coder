{
  "name": "gemini-coder",
  "displayName": "Gemini Coder: FIM Autocomplete with 2M context!",
  "description": "Take advantage of 2 million token context window and use Gemini as your Fill-in-the-middle, refactoring coding assistant. Manually select scope of your repository to be attached in each request and get the best coding assistance possible.",
  "version": "1.0.59",
  "publisher": "robertpiosik",
  "repository": {
    "type": "git",
    "url": "https://github.com/robertpiosik/gemini-coder/tree/master/packages/vscode"
  },
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Google",
    "Gemini",
    "Gemini Flash",
    "Gemini Pro",
    "ai",
    "Autocomplete",
    "Code completion",
    "Fill-in-the-middle",
    "FIM",
    "Refactoring",
    "Coding assistant",
    "Chat"
  ],
  "activationEvents": [
    "onView.geminiCoderViewContext"
  ],
  "main": "out/extension.js",
  "icon": "media/thumbnail.png",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "geminiCoder",
          "title": "Gemini Coder",
          "icon": "resources/activity-bar-icon.svg"
        }
      ]
    },
    "views": {
      "geminiCoder": [
        {
          "id": "geminiCoderViewContext",
          "name": "Context"
        },
        {
          "id": "geminiCoderViewChat",
          "name": "Chat",
          "type": "webview"
        }
      ]
    },
    "commands": [
      {
        "command": "geminiCoder.copyContext",
        "title": "Copy context",
        "icon": {
          "light": "resources/light/copy.svg",
          "dark": "resources/dark/copy.svg"
        }
      },
      {
        "command": "geminiCoder.copyContextCommand",
        "title": "Gemini Coder: Copy Context"
      },
      {
        "command": "geminiCoder.clearChecks",
        "title": "Clear all checks",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "geminiCoder.sendCompletionRequestPrimary",
        "title": "Gemini Coder: Autocomplete with Primary Model"
      },
      {
        "command": "geminiCoder.sendCompletionRequestSecondary",
        "title": "Gemini Coder: Autocomplete with Secondary Model"
      },
      {
        "command": "geminiCoder.copyAutocompletePrompt",
        "title": "Gemini Coder: Copy Autocompletion Prompt to Clipboard"
      },
      {
        "command": "geminiCoder.changeDefaultProvider",
        "title": "Gemini Coder: Change Default Models"
      },
      {
        "command": "geminiCoder.refactorFile",
        "title": "Gemini Coder: Refactor this file"
      },
      {
        "command": "geminiCoder.copyRefactorPrompt",
        "title": "Gemini Coder: Copy File Refactoring Prompt to Clipboard"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "geminiCoder.copyContext",
          "when": "view == geminiCoderViewContext",
          "group": "navigation@1"
        },
        {
          "command": "geminiCoder.clearChecks",
          "when": "view == geminiCoderViewContext",
          "group": "navigation@3"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Gemini Coder Settings",
      "properties": {
        "geminiCoder.primaryModel": {
          "type": "string",
          "description": "The primary model to use.",
          "default": "Gemini Flash"
        },
        "geminiCoder.secondaryModel": {
          "type": "string",
          "description": "The secondary model to use.",
          "default": "Gemini Pro"
        },
        "geminiCoder.apiKey": {
          "type": "string",
          "scope": "resource",
          "description": "API key to use with built-in Gemini models. Get yours here: https://aistudio.google.com/app/apikey",
          "default": ""
        },
        "geminiCoder.temperature": {
          "type": "number",
          "scope": "resource",
          "description": "Temperature to use with built-in Gemini models.",
          "default": 0
        },
        "geminiCoder.providers": {
          "type": "array",
          "default": [],
          "description": "Configure additional models via OpenAI API compatible providers.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "A friendly name for the provider."
              },
              "endpointUrl": {
                "type": "string",
                "description": "Endpoint URL."
              },
              "bearerToken": {
                "type": "string",
                "description": "API key."
              },
              "model": {
                "type": "string",
                "description": "Model name."
              },
              "temperature": {
                "type": "number",
                "description": "Temperature."
              },
              "systemInstructions": {
                "type": "string",
                "description": "The system instructions."
              },
              "instruction": {
                "type": "string",
                "description": "Custom Autocomplete instruction."
              }
            }
          }
        },
        "geminiCoder.verbose": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logging."
        },
        "geminiCoder.attachOpenFiles": {
          "type": "boolean",
          "default": true,
          "description": "Attach open files to the context."
        },
        "geminiCoder.autocompleteInstruction": {
          "type": "string",
          "description": "",
          "default": "The following files are part of a Git repository with code. Somewhere in the repository you will encounter <fill missing code> symbol. Send the missing code and nothing more."
        },
        "geminiCoder.chatPromptIntro": {
          "type": "string",
          "description": "Introduction for chat prompt.",
          "default": "You are a helpful coding assistant. Never use diff format."
        },
        "geminiCoder.ignoredExtensions": {
          "type": "string",
          "description": "Comma-separated list of file extensions to ignore during recursive scan for context files. Example: 'png,jpg,jpeg,gif,svg'.",
          "default": "png,jpg,jpeg,gif,svg"
        },
        "geminiCoder.externalChat": {
          "type": "string",
          "description": "External chat to use (requires browser extension).",
          "enum": [
            "AI Studio",
            "DeepSeek"
          ],
          "default": "AI Studio"
        }
      }
    }
  },
  "scripts": {
    "build": "vsce package --no-dependencies",
    "vscode:prepublish": "npm run compile",
    "compile": "webpack --config ./webpack.config.js"
  },
  "devDependencies": {
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.7.2",
    "webpack": "^5.97.1",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "axios": "^1.7.7",
    "ignore": "^6.0.2"
  }
}
