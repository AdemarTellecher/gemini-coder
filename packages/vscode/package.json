{
  "name": "gemini-coder",
  "displayName": "Gemini Coder - the 2M context coding assistant",
  "description": "Granularly pick context and initalize web chats, hands-free! Use the same big context for FIM code completions and file refactorings, whenever you need something context aware!",
  "version": "1.0.150",
  "publisher": "robertpiosik",
  "repository": {
    "type": "git",
    "url": "https://github.com/robertpiosik/gemini-coder/tree/master/packages/vscode"
  },
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Google",
    "Gemini",
    "AI Studio",
    "ChatGPT",
    "Claude",
    "DeepSeek",
    "FIM",
    "Refactoring",
    "Coding assistant",
    "Chat"
  ],
  "activationEvents": [
    "onView.geminiCoderViewContext"
  ],
  "main": "out/extension.js",
  "icon": "media/thumbnail.png",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "geminiCoder",
          "title": "Gemini Coder",
          "icon": "resources/activity-bar-icon.svg"
        }
      ]
    },
    "views": {
      "geminiCoder": [
        {
          "id": "geminiCoderViewContext",
          "name": "Context"
        },
        {
          "id": "geminiCoderViewChat",
          "name": "Web Chat",
          "type": "webview"
        }
      ]
    },
    "commands": [
      {
        "command": "geminiCoder.copyContext",
        "title": "Copy context",
        "icon": {
          "light": "resources/light/copy.svg",
          "dark": "resources/dark/copy.svg"
        }
      },
      {
        "command": "geminiCoder.copyContextCommand",
        "title": "Gemini Coder: Copy Context"
      },
      {
        "command": "geminiCoder.clearChecks",
        "title": "Clear all checks",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "geminiCoder.requestFimCompletionWith",
        "title": "Gemini Coder: Request FIM Completion with..."
      },
      {
        "command": "geminiCoder.requestFimCompletion",
        "title": "Gemini Coder: Request FIM Completion"
      },
      {
        "command": "geminiCoder.copyFimCompletionPrompt",
        "title": "Gemini Coder: Copy FIM Completion Prompt to Clipboard"
      },
      {
        "command": "geminiCoder.changeDefaultModel",
        "title": "Gemini Coder: Change Default Model"
      },
      {
        "command": "geminiCoder.changeDefaultRefactoringModel",
        "title": "Gemini Coder: Change Default Refactoring Model"
      },
      {
        "command": "geminiCoder.applyChanges",
        "title": "Gemini Coder: Apply Changes to this File"
      },
      {
        "command": "geminiCoder.copyApplyChangesPrompt",
        "title": "Gemini Coder: Copy Apply Changes Prompt to Clipboard"
      },
      {
        "command": "geminiCoder.openWebChatWithFimCompletionPrompt",
        "title": "Gemini Coder: Open Web Chat with FIM Completion Prompt"
      },
      {
        "command": "geminiCoder.openWebChatWithApplyChangesPrompt",
        "title": "Gemini Coder: Open Web Chat with Apply Changes Prompt"
      },
      {
        "command": "geminiCoder.openWebChatWithInstruction",
        "title": "Gemini Coder: Open Web Chat with Instruction"
      },
      {
        "command": "geminiCoder.composeChatPrompt",
        "title": "Gemini Coder: Compose Chat Prompt to Clipboard"
      },
      {
        "command": "geminiCoder.refactorWithInstruction",
        "title": "Gemini Coder: Refactor this File with Instruction"
      },
      {
        "command": "geminiCoder.copyRefactoringPrompt",
        "title": "Gemini Coder: Copy Refactoring Instruction Prompt to Clipboard"
      },
      {
        "command": "geminiCoder.openWebChatWithRefactoringInstruction",
        "title": "Gemini Coder: Open Web Chat with Refactoring Instruction"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "geminiCoder.copyContext",
          "when": "view == geminiCoderViewContext",
          "group": "navigation@1"
        },
        {
          "command": "geminiCoder.clearChecks",
          "when": "view == geminiCoderViewContext",
          "group": "navigation@3"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Gemini Coder Settings",
      "properties": {
        "geminiCoder.defaultModel": {
          "type": "string",
          "description": "The default model to use for FIM completions. Update conveniently with command: Change Default Model.",
          "default": "Gemini 2.0 Flash"
        },
        "geminiCoder.defaultRefactoringModel": {
          "type": "string",
          "description": "The default refactoring model to use. Update conveniently with command: Change Default Refactoring Model.",
          "default": "Gemini 2.0 Flash"
        },
        "geminiCoder.apiKey": {
          "type": "string",
          "scope": "resource",
          "description": "API key to use with built-in Gemini models. Get yours here: https://aistudio.google.com/app/apikey",
          "default": ""
        },
        "geminiCoder.temperature": {
          "type": "number",
          "scope": "resource",
          "description": "Temperature to use with built-in Gemini models for FIM completions and applying changes commands.",
          "default": 0
        },
        "geminiCoder.providers": {
          "type": "array",
          "default": [],
          "description": "Configure additional models via OpenAI API compatible providers.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "A friendly name for the provider."
              },
              "endpointUrl": {
                "type": "string",
                "description": "Endpoint URL."
              },
              "bearerToken": {
                "type": "string",
                "description": "API key."
              },
              "model": {
                "type": "string",
                "description": "Model name."
              },
              "temperature": {
                "type": "number",
                "description": "Temperature."
              },
              "systemInstructions": {
                "type": "string",
                "description": "The system instructions."
              },
              "instruction": {
                "type": "string",
                "description": "Custom Autocomplete instruction."
              }
            }
          }
        },
        "geminiCoder.verbose": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logging."
        },
        "geminiCoder.attachOpenFiles": {
          "type": "boolean",
          "default": true,
          "description": "Attach open files to the context."
        },
        "geminiCoder.ignoredExtensions": {
          "type": "string",
          "description": "Comma-separated list of file extensions to ignore during recursive scan for context files. Example: 'png,jpg,jpeg,gif,svg'.",
          "default": "png,jpg,jpeg,gif,svg"
        },
        "geminiCoder.systemInstructions": {
          "type": "array",
          "default": [
            "You are an AI coding assistant."
          ],
          "description": "System instructions for AI Studio.",
          "items": {
            "type": "string"
          }
        },
        "geminiCoder.promptPrefixes": {
          "type": "array",
          "default": [
            "Outline the steps needed to achieve:",
            "Draft a roadmap for accomplishing:",
            "Propose various approaches for addressing:",
            "Identify potential challenges in developing:",
            "Describe the purpose of this code:",
            "I need assistance troubleshooting this issue:",
            "Help diagnose this error:",
            "Generate commit message based on changes:",
            "Write tests for:"
          ],
          "description": "Prompt prefixes.",
          "items": {
            "type": "string"
          }
        },
        "geminiCoder.promptSuffixes": {
          "type": "array",
          "default": [
            "Keep your response concise.",
            "Think step by step.",
            "Show only changed fragments.",
            "Summarize your understanding of the problem.",
            "Highlight what needs to change.",
            "Detail the key considerations.",
            "Suggest any alternative approaches.",
            "Identify potential drawbacks.",
            "Ask for clarifications if needed before proceeding."
          ],
          "description": "Prompt suffixes.",
          "items": {
            "type": "string"
          }
        },
        "geminiCoder.openWebChatsInBackground": {
          "type": "boolean",
          "default": false,
          "description": "Controls whether browser window should be focused or stay below the editor."
        },
        "geminiCoder.webChats": {
          "type": "array",
          "default": [
            {
              "name": "AI Studio",
              "isDisabled": false,
              "provider": "ai_studio",
              "promptPrefix": "",
              "promptSuffix": "",
              "model": "gemini-2.0-flash",
              "tokenLimit": 1000000,
              "temperature": 0.5,
              "systemInstructions": "You are an AI coding assistant."
            },
            {
              "name": "Gemini",
              "isDisabled": false,
              "provider": "gemini",
              "promptPrefix": "",
              "promptSuffix": "",
              "model": "gemini-2.0-flash",
              "tokenLimit": 20000
            }
          ],
          "description": "Configure multiple chat instances that will be initialized together.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the chat configuration."
              },
              "isDisabled": {
                "type": "boolean",
                "description": "Disable this chat configuration"
              },
              "provider": {
                "type": "string",
                "enum": [
                  "ai_studio",
                  "gemini",
                  "chatgpt",
                  "github_copilot",
                  "claude",
                  "deepseek",
                  "mistral",
                  "grok",
                  "huggingchat",
                  "open_webui"
                ],
                "description": "Select supported web chat provider"
              },
              "promptPrefix": {
                "type": "string",
                "examples": [
                  "Outline the steps needed to achieve:",
                  "Draft a roadmap for accomplishing:",
                  "Propose various approaches for addressing:",
                  "Identify potential challenges in developing:",
                  "Describe the purpose of this code:",
                  "I need assistance troubleshooting this issue:",
                  "Help diagnose this error:",
                  "Generate commit message based on changes:",
                  "Write tests for:"
                ],
                "description": "Prefix prepended to all prompts sent with this chat"
              },
              "promptSuffix": {
                "type": "string",
                "examples": [
                  "Keep your response concise.",
                  "Think step by step.",
                  "Show only changed fragments.",
                  "Summarize your understanding of the problem.",
                  "Highlight what needs to change.",
                  "Detail the key considerations.",
                  "Suggest any alternative approaches.",
                  "Identify potential drawbacks.",
                  "Ask for clarifications if needed before proceeding."
                ],
                "description": "Suffix appended to all prompts sent with this chat"
              },
              "model": {
                "type": "string",
                "description": "Model to use (selected providers only)"
              },
              "tokenLimit": {
                "type": "number",
                "description": "Token limit for this chat"
              },
              "temperature": {
                "type": "number",
                "description": "Temperature to use (selected providers only)"
              },
              "systemInstructions": {
                "type": "string",
                "description": "System instructions to use (selected providers only)"
              }
            },
            "required": [
              "name",
              "provider"
            ]
          }
        }
      }
    }
  },
  "scripts": {
    "build": "vsce package --no-dependencies",
    "vscode:prepublish": "npm run compile",
    "compile": "webpack --config ./webpack.config.js"
  },
  "devDependencies": {
    "@babel/core": "^7.24.0",
    "@babel/preset-env": "^7.24.0",
    "@babel/preset-react": "^7.23.3",
    "@babel/preset-typescript": "^7.23.3",
    "@types/node": "20.x",
    "@types/react": "^18.2.60",
    "@types/react-dom": "^18.2.19",
    "@types/vscode": "^1.92.0",
    "@types/ws": "^8.5.14",
    "babel-loader": "^9.1.3",
    "clean-webpack-plugin": "^4.0.0",
    "copy-webpack-plugin": "^12.0.2",
    "css-loader": "^6.5.1",
    "mini-css-extract-plugin": "^2.9.0",
    "sass": "^1.49.0",
    "sass-loader": "^12.4.0",
    "style-loader": "^3.3.1",
    "ts-loader": "^9.5.1",
    "typed-css-modules": "^0.9.1",
    "typescript": "^5.7.2",
    "webpack": "^5.97.1",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "axios": "^1.7.7",
    "ignore": "^6.0.2",
    "path-browserify": "^1.0.1",
    "react": "^18.2.0",
    "react-autosize-textarea": "^7.1.0",
    "react-dom": "^18.2.0",
    "ws": "^8.18.0"
  }
}
