{
  "name": "gemini-coder",
  "displayName": "Gemini Coder for VS Code",
  "description": "Open automatically initialized AI Studio chat with your custom instruction and hand-picked context, up to 2M tokens! Use the same big context for code completions, whenever you need something context aware!",
  "version": "1.0.91",
  "publisher": "robertpiosik",
  "repository": {
    "type": "git",
    "url": "https://github.com/robertpiosik/gemini-coder/tree/master/packages/vscode"
  },
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Google",
    "Gemini",
    "Gemini Flash",
    "Gemini Pro",
    "ai",
    "Autocomplete",
    "Code completion",
    "Fill-in-the-middle",
    "FIM",
    "Refactoring",
    "Coding assistant",
    "Chat"
  ],
  "activationEvents": [
    "onView.geminiCoderViewContext"
  ],
  "main": "out/extension.js",
  "icon": "media/thumbnail.png",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "geminiCoder",
          "title": "Gemini Coder",
          "icon": "resources/activity-bar-icon.svg"
        }
      ]
    },
    "views": {
      "geminiCoder": [
        {
          "id": "geminiCoderViewContext",
          "name": "Context"
        },
        {
          "id": "geminiCoderViewChat",
          "name": "Chat",
          "type": "webview"
        }
      ]
    },
    "commands": [
      {
        "command": "geminiCoder.copyContext",
        "title": "Copy context",
        "icon": {
          "light": "resources/light/copy.svg",
          "dark": "resources/dark/copy.svg"
        }
      },
      {
        "command": "geminiCoder.copyContextCommand",
        "title": "Gemini Coder: Copy Context"
      },
      {
        "command": "geminiCoder.clearChecks",
        "title": "Clear all checks",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "geminiCoder.sendCompletionRequestPrimary",
        "title": "Gemini Coder: Autocomplete with Primary Model"
      },
      {
        "command": "geminiCoder.sendCompletionRequestSecondary",
        "title": "Gemini Coder: Autocomplete with Secondary Model"
      },
      {
        "command": "geminiCoder.copyAutocompletePrompt",
        "title": "Gemini Coder: Copy Autocompletion Prompt to Clipboard"
      },
      {
        "command": "geminiCoder.changeDefaultProvider",
        "title": "Gemini Coder: Change Default Models"
      },
      {
        "command": "geminiCoder.refactorFile",
        "title": "Gemini Coder: Refactor this file"
      },
      {
        "command": "geminiCoder.copyRefactorPrompt",
        "title": "Gemini Coder: Copy File Refactoring Prompt to Clipboard"
      },
      {
        "command": "geminiCoder.openWebChatWithAutocompletionPrompt",
        "title": "Gemini Coder: Open Web Chat with Autocompletion Prompt"
      },
      {
        "command": "geminiCoder.openWebChatWithRefactorPrompt",
        "title": "Gemini Coder: Open Web Chat with file refactoring prompt..."
      },
      {
        "command": "geminiCoder.openWebChatWithInstruction",
        "title": "Gemini Coder: Open Web Chat with instruction..."
      },
      {
        "command": "geminiCoder.changeWebChat",
        "title": "Gemini Coder: Change Web Chat"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "geminiCoder.copyContext",
          "when": "view == geminiCoderViewContext",
          "group": "navigation@1"
        },
        {
          "command": "geminiCoder.clearChecks",
          "when": "view == geminiCoderViewContext",
          "group": "navigation@3"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Gemini Coder Settings",
      "properties": {
        "geminiCoder.primaryModel": {
          "type": "string",
          "description": "The primary model to use.",
          "default": "Gemini Flash"
        },
        "geminiCoder.secondaryModel": {
          "type": "string",
          "description": "The secondary model to use.",
          "default": "Gemini Pro"
        },
        "geminiCoder.apiKey": {
          "type": "string",
          "scope": "resource",
          "description": "API key to use with built-in Gemini models. Get yours here: https://aistudio.google.com/app/apikey",
          "default": ""
        },
        "geminiCoder.temperature": {
          "type": "number",
          "scope": "resource",
          "description": "Temperature to use with built-in Gemini models.",
          "default": 0
        },
        "geminiCoder.providers": {
          "type": "array",
          "default": [],
          "description": "Configure additional models via OpenAI API compatible providers.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "A friendly name for the provider."
              },
              "endpointUrl": {
                "type": "string",
                "description": "Endpoint URL."
              },
              "bearerToken": {
                "type": "string",
                "description": "API key."
              },
              "model": {
                "type": "string",
                "description": "Model name."
              },
              "temperature": {
                "type": "number",
                "description": "Temperature."
              },
              "systemInstructions": {
                "type": "string",
                "description": "The system instructions."
              },
              "instruction": {
                "type": "string",
                "description": "Custom Autocomplete instruction."
              }
            }
          }
        },
        "geminiCoder.verbose": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logging."
        },
        "geminiCoder.attachOpenFiles": {
          "type": "boolean",
          "default": true,
          "description": "Attach open files to the context."
        },
        "geminiCoder.ignoredExtensions": {
          "type": "string",
          "description": "Comma-separated list of file extensions to ignore during recursive scan for context files. Example: 'png,jpg,jpeg,gif,svg'.",
          "default": "png,jpg,jpeg,gif,svg"
        },
        "geminiCoder.webChat": {
          "type": "string",
          "description": "Web chat to use. VS Code will open the selected website in a default browser so you can paste generated prompt from clipboard. Consider installing our browser extension \"Gemini Coder Connector\" to do it on your behalf.",
          "enum": [
            "AI Studio",
            "DeepSeek"
          ],
          "default": "AI Studio",
          "configuration": {
            "options": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "AI Studio",
                "DeepSeek"
              ]
            }
          }
        },
        "geminiCoder.setFocusedAttribute": {
          "type": "boolean",
          "default": true,
          "description": "Set focused attribute (<file path=\"\" focused=\"true\">) in the context of the currently focused file."
        }
      }
    },
    "statusBar": [
      {
        "id": "geminiCoder.webChatStatusBar",
        "alignment": "right",
        "text": "$(comment-discussion) AI Studio",
        "command": "geminiCoder.changeWebChat",
        "priority": 99
      }
    ]
  },
  "scripts": {
    "build": "vsce package --no-dependencies",
    "vscode:prepublish": "npm run compile",
    "compile": "webpack --config ./webpack.config.js"
  },
  "devDependencies": {
    "@babel/core": "^7.24.0",
    "@babel/preset-env": "^7.24.0",
    "@babel/preset-react": "^7.23.3",
    "@babel/preset-typescript": "^7.23.3",
    "@types/node": "20.x",
    "@types/react": "^18.2.60",
    "@types/react-dom": "^18.2.19",
    "@types/vscode": "^1.92.0",
    "babel-loader": "^9.1.3",
    "css-loader": "^6.5.1",
    "mini-css-extract-plugin": "^2.9.0",
    "sass": "^1.49.0",
    "sass-loader": "^12.4.0",
    "style-loader": "^3.3.1",
    "ts-loader": "^9.5.1",
    "typed-css-modules": "^0.9.1",
    "typescript": "^5.7.2",
    "webpack": "^5.97.1",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "axios": "^1.7.7",
    "ignore": "^6.0.2",
    "path-browserify": "^1.0.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  }
}
